version: '3'
services:
  app_db:
    image: postgres:latest
    container_name: app_db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=routeservicedb
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/data
      - ./db/scripts/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
      - ./db/scripts/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks:
      - postgres-network
  
  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "p.filipe.dantas@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "qwe123!@#"
    ports:
      - "16543:80"
    depends_on:
      - app_db
    networks:
      - postgres-network

  app:
    build:
      context: ./app/writer
    ports:
      - 8080:8080
    networks:
      - postgres-network

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: >
          "
            sleep 10;

            aws sqs create-queue --endpoint-url=http://localstack:4566 --queue-name route-logs;
          "

volumes:
    app_data:

networks: 
  postgres-network:
    driver: bridge